{
  "address": "0xA99f5aC0EE53C958A608D068063A9651D20A6e7a",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "market",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ptOracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ptToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "underlyingToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "resilientOracle",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "twapDuration",
          "type": "uint32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidDuration",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidTokenAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddressNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroValueNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CORRELATED_TOKEN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MARKET",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PT_ORACLE",
      "outputs": [
        {
          "internalType": "contract IPendlePtOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RESILIENT_ORACLE",
      "outputs": [
        {
          "internalType": "contract OracleInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TWAP_DURATION",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UNDERLYING_TOKEN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x6d31398243df50986d5c253877282ba4f44be69d1e3ade25d8d0e7d08d4c4a34",
  "receipt": {
    "to": null,
    "from": "0x2816CB0001234d2539999730E8A9CD65D7f7212b",
    "contractAddress": "0xA99f5aC0EE53C958A608D068063A9651D20A6e7a",
    "transactionIndex": 18,
    "gasUsed": "435791",
    "logsBloom": "0x
    "blockHash": "0x77c65a6d6c1b29fc6c80d94db29acc8b11f6880cb95fe75c13ce6d56231854d5",
    "transactionHash": "0x6d31398243df50986d5c253877282ba4f44be69d1e3ade25d8d0e7d08d4c4a34",
    "logs": [],
    "blockNumber": 21441981,
    "cumulativeGasUsed": "6082042",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xcDd26Eb5EB2Ce0f203a84553853667aE69Ca29Ce",
    "0x9a9fa8338dd5e5b2188006f1cd2ef26d921650c2",
    "0xe00bd3df25fb187d6abbb620b3dfd19839947b81",
    "0x4c9edd5852cd905f086c759e8383e09bff1e68b3",
    "0xd2ce3fb018805ef92b8C5976cb31F84b4E295F94",
    1800
  ],
  "numDeployments": 1,
  "solcInputHash": "c9234768a0e90787a3e044ab631ca909",
  "metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ptOracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ptToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resilientOracle\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"twapDuration\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroValueNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CORRELATED_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MARKET\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PT_ORACLE\",\"outputs\":[{\"internalType\":\"contract IPendlePtOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESILIENT_ORACLE\",\"outputs\":[{\"internalType\":\"contract OracleInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TWAP_DURATION\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNDERLYING_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Venus\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"getPrice(address)\":{\"params\":{\"asset\":\"Address of the correlated token\"},\"returns\":{\"_0\":\"price The price of the correlated token in scaled decimal places\"}}},\"stateVariables\":{\"MARKET\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"},\"PT_ORACLE\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"},\"TWAP_DURATION\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"title\":\"PendleOracle\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidDuration()\":[{\"notice\":\"Thrown if the duration is invalid\"}],\"InvalidTokenAddress()\":[{\"notice\":\"Thrown if the token address is invalid\"}],\"ZeroAddressNotAllowed()\":[{\"notice\":\"Thrown if the supplied address is a zero address where it is not allowed\"}],\"ZeroValueNotAllowed()\":[{\"notice\":\"Thrown if the supplied value is 0 where it is not allowed\"}]},\"kind\":\"user\",\"methods\":{\"CORRELATED_TOKEN()\":{\"notice\":\"Address of the correlated token\"},\"MARKET()\":{\"notice\":\"Address of the market\"},\"PT_ORACLE()\":{\"notice\":\"Address of the PT oracle\"},\"RESILIENT_ORACLE()\":{\"notice\":\"Address of Resilient Oracle\"},\"TWAP_DURATION()\":{\"notice\":\"Twap duration for the oracle\"},\"UNDERLYING_TOKEN()\":{\"notice\":\"Address of the underlying token\"},\"constructor\":{\"notice\":\"Constructor for the implementation contract.\"},\"getPrice(address)\":{\"notice\":\"Fetches the price of the correlated token\"}},\"notice\":\"This oracle fetches the price of a pendle token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/PendleOracle.sol\":\"PendleOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@venusprotocol/solidity-utilities/contracts/validators.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity 0.8.25;\\n\\n/// @notice Thrown if the supplied address is a zero address where it is not allowed\\nerror ZeroAddressNotAllowed();\\n\\n/// @notice Thrown if the supplied value is 0 where it is not allowed\\nerror ZeroValueNotAllowed();\\n\\n/// @notice Checks if the provided address is nonzero, reverts otherwise\\n/// @param address_ Address to check\\n/// @custom:error ZeroAddressNotAllowed is thrown if the provided address is a zero address\\nfunction ensureNonzeroAddress(address address_) pure {\\n    if (address_ == address(0)) {\\n        revert ZeroAddressNotAllowed();\\n    }\\n}\\n\\n/// @notice Checks if the provided value is nonzero, reverts otherwise\\n/// @param value_ Value to check\\n/// @custom:error ZeroValueNotAllowed is thrown if the provided value is 0\\nfunction ensureNonzeroValue(uint256 value_) pure {\\n    if (value_ == 0) {\\n        revert ZeroValueNotAllowed();\\n    }\\n}\\n\",\"keccak256\":\"0xdb88e14d50dd21889ca3329d755673d022c47e8da005b6a545c7f69c2c4b7b86\",\"license\":\"BSD-3-Clause\"},\"contracts/interfaces/IPendlePtOracle.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity 0.8.25;\\n\\ninterface IPendlePtOracle {\\n    function getPtToAssetRate(address market, uint32 duration) external view returns (uint256);\\n    function getOracleState(\\n        address market,\\n        uint32 duration\\n    )\\n        external\\n        view\\n        returns (bool increaseCardinalityRequired, uint16 cardinalityRequired, bool oldestObservationSatisfied);\\n}\\n\",\"keccak256\":\"0x74f0784277968051c863fc74e10b376b8893f7dcfca39e97f48d3253224943a3\",\"license\":\"BSD-3-Clause\"},\"contracts/interfaces/OracleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity ^0.8.25;\\n\\ninterface OracleInterface {\\n    function getPrice(address asset) external view returns (uint256);\\n}\\n\\ninterface ResilientOracleInterface is OracleInterface {\\n    function updatePrice(address vToken) external;\\n\\n    function updateAssetPrice(address asset) external;\\n\\n    function getUnderlyingPrice(address vToken) external view returns (uint256);\\n}\\n\\ninterface TwapInterface is OracleInterface {\\n    function updateTwap(address asset) external returns (uint256);\\n}\\n\\ninterface BoundValidatorInterface {\\n    function validatePriceWithAnchorPrice(\\n        address asset,\\n        uint256 reporterPrice,\\n        uint256 anchorPrice\\n    ) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x2432799b0d824fc701beb4c30146e912b9aeecf77b5c1635dde6c5fbe6bfc3a7\",\"license\":\"BSD-3-Clause\"},\"contracts/oracles/PendleOracle.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity 0.8.25;\\n\\nimport { IPendlePtOracle } from \\\"../interfaces/IPendlePtOracle.sol\\\";\\nimport { CorrelatedTokenOracle } from \\\"./common/CorrelatedTokenOracle.sol\\\";\\nimport { ensureNonzeroAddress, ensureNonzeroValue } from \\\"@venusprotocol/solidity-utilities/contracts/validators.sol\\\";\\n\\n/**\\n * @title PendleOracle\\n * @author Venus\\n * @notice This oracle fetches the price of a pendle token\\n */\\ncontract PendleOracle is CorrelatedTokenOracle {\\n    /// @notice Address of the PT oracle\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    IPendlePtOracle public immutable PT_ORACLE;\\n\\n    /// @notice Address of the market\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address public immutable MARKET;\\n\\n    /// @notice Twap duration for the oracle\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    uint32 public immutable TWAP_DURATION;\\n\\n    /// @notice Thrown if the duration is invalid\\n    error InvalidDuration();\\n\\n    /// @notice Constructor for the implementation contract.\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor(\\n        address market,\\n        address ptOracle,\\n        address ptToken,\\n        address underlyingToken,\\n        address resilientOracle,\\n        uint32 twapDuration\\n    ) CorrelatedTokenOracle(ptToken, underlyingToken, resilientOracle) {\\n        ensureNonzeroAddress(market);\\n        ensureNonzeroAddress(ptOracle);\\n        ensureNonzeroValue(twapDuration);\\n\\n        MARKET = market;\\n        PT_ORACLE = IPendlePtOracle(ptOracle);\\n        TWAP_DURATION = twapDuration;\\n\\n        (bool increaseCardinalityRequired, , bool oldestObservationSatisfied) = PT_ORACLE.getOracleState(\\n            MARKET,\\n            TWAP_DURATION\\n        );\\n        if (increaseCardinalityRequired || !oldestObservationSatisfied) {\\n            revert InvalidDuration();\\n        }\\n    }\\n\\n    /**\\n     * @notice Fetches the amount of underlying token for 1 pendle token\\n     * @return amount The amount of underlying token for pendle token\\n     */\\n    function _getUnderlyingAmount() internal view override returns (uint256) {\\n        return PT_ORACLE.getPtToAssetRate(MARKET, TWAP_DURATION);\\n    }\\n}\\n\",\"keccak256\":\"0x8a8cd3ee942396648f08caaec3f8a933a46b186f0fd926067a58f1aad073691b\",\"license\":\"BSD-3-Clause\"},\"contracts/oracles/common/CorrelatedTokenOracle.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity 0.8.25;\\n\\nimport { OracleInterface } from \\\"../../interfaces/OracleInterface.sol\\\";\\nimport { ensureNonzeroAddress } from \\\"@venusprotocol/solidity-utilities/contracts/validators.sol\\\";\\nimport { IERC20Metadata } from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\n/**\\n * @title CorrelatedTokenOracle\\n * @notice This oracle fetches the price of a token that is correlated to another token.\\n */\\nabstract contract CorrelatedTokenOracle is OracleInterface {\\n    /// @notice Address of the correlated token\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address public immutable CORRELATED_TOKEN;\\n\\n    /// @notice Address of the underlying token\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address public immutable UNDERLYING_TOKEN;\\n\\n    /// @notice Address of Resilient Oracle\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    OracleInterface public immutable RESILIENT_ORACLE;\\n\\n    /// @notice Thrown if the token address is invalid\\n    error InvalidTokenAddress();\\n\\n    /// @notice Constructor for the implementation contract.\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor(address correlatedToken, address underlyingToken, address resilientOracle) {\\n        ensureNonzeroAddress(correlatedToken);\\n        ensureNonzeroAddress(underlyingToken);\\n        ensureNonzeroAddress(resilientOracle);\\n        CORRELATED_TOKEN = correlatedToken;\\n        UNDERLYING_TOKEN = underlyingToken;\\n        RESILIENT_ORACLE = OracleInterface(resilientOracle);\\n    }\\n\\n    /**\\n     * @notice Fetches the price of the correlated token\\n     * @param asset Address of the correlated token\\n     * @return price The price of the correlated token in scaled decimal places\\n     */\\n    function getPrice(address asset) external view override returns (uint256) {\\n        if (asset != CORRELATED_TOKEN) revert InvalidTokenAddress();\\n\\n        // get underlying token amount for 1 correlated token scaled by underlying token decimals\\n        uint256 underlyingAmount = _getUnderlyingAmount();\\n\\n        // oracle returns (36 - asset decimal) scaled price\\n        uint256 underlyingUSDPrice = RESILIENT_ORACLE.getPrice(UNDERLYING_TOKEN);\\n\\n        IERC20Metadata token = IERC20Metadata(CORRELATED_TOKEN);\\n        uint256 decimals = token.decimals();\\n\\n        // underlyingAmount (for 1 correlated token) * underlyingUSDPrice / decimals(correlated token)\\n        return (underlyingAmount * underlyingUSDPrice) / (10 ** decimals);\\n    }\\n\\n    /**\\n     * @notice Gets the underlying amount for correlated token\\n     * @return underlyingAmount Amount of underlying token\\n     */\\n    function _getUnderlyingAmount() internal view virtual returns (uint256);\\n}\\n\",\"keccak256\":\"0x7053239c18747f7439e025cd4aab629f78dd6dbaadeedacf2393d74c4db317ca\",\"license\":\"BSD-3-Clause\"}},\"version\":1}",
  "bytecode": "0x61014060405234801561001157600080fd5b5060405161095b38038061095b833981016040819052610030916101b7565b83838361003c83610150565b61004582610150565b61004e81610150565b6001600160a01b0392831660805290821660a0521660c05261006f86610150565b61007885610150565b61008763ffffffff821661017a565b6001600160a01b0386811661010081905290861660e081905263ffffffff831661012081905260405162439f4b60e91b81526004810193909352602483015260009182919063873e960090604401606060405180830381865afa1580156100f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101169190610248565b92505091508180610125575080155b1561014357604051637616640160e01b815260040160405180910390fd5b5050505050505050610294565b6001600160a01b038116610177576040516342bcdf7f60e11b815260040160405180910390fd5b50565b806000036101775760405163273e150360e21b815260040160405180910390fd5b80516001600160a01b03811681146101b257600080fd5b919050565b60008060008060008060c087890312156101d057600080fd5b6101d98761019b565b95506101e76020880161019b565b94506101f56040880161019b565b93506102036060880161019b565b92506102116080880161019b565b915060a087015163ffffffff8116811461022a57600080fd5b809150509295509295509295565b805180151581146101b257600080fd5b60008060006060848603121561025d57600080fd5b61026684610238565b9250602084015161ffff8116811461027d57600080fd5b915061028b60408501610238565b90509250925092565b60805160a05160c05160e05161010051610120516106496103126000396000818161013a01526103c501526000818161019d015261039d01526000818161011301526103f401526000818161017601526102620152600081816087015261023401526000818160ec015281816101c301526102d301526106496000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063809d7b311161005b578063809d7b311461010e578063879ac8f814610135578063a4edcd4c14610171578063f46f16c21461019857600080fd5b806329db1be61461008257806341976e09146100c657806369818a35146100e7575b600080fd5b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d96100d4366004610466565b6101bf565b6040519081526020016100bd565b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b61015c7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016100bd565b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161461021357604051630f58058360e11b815260040160405180910390fd5b600061021d610386565b6040516341976e0960e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301529192506000917f000000000000000000000000000000000000000000000000000000000000000016906341976e0990602401602060405180830381865afa1580156102a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cd9190610496565b905060007f000000000000000000000000000000000000000000000000000000000000000090506000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610334573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035891906104af565b60ff16905061036881600a6105ce565b61037284866105da565b61037c91906105f1565b9695505050505050565b60405163abca0eab60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301527f000000000000000000000000000000000000000000000000000000000000000063ffffffff1660248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063abca0eab90604401602060405180830381865afa15801561043d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104619190610496565b905090565b60006020828403121561047857600080fd5b81356001600160a01b038116811461048f57600080fd5b9392505050565b6000602082840312156104a857600080fd5b5051919050565b6000602082840312156104c157600080fd5b815160ff8116811461048f57600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610523578160001904821115610509576105096104d2565b8085161561051657918102915b93841c93908002906104ed565b509250929050565b60008261053a575060016105c8565b81610547575060006105c8565b816001811461055d576002811461056757610583565b60019150506105c8565b60ff841115610578576105786104d2565b50506001821b6105c8565b5060208310610133831016604e8410600b84101617156105a6575081810a6105c8565b6105b083836104e8565b80600019048211156105c4576105c46104d2565b0290505b92915050565b600061048f838361052b565b80820281158282048414176105c8576105c86104d2565b60008261060e57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220a111fc04f9cd6d5391f30cd9318e07a2d4548dba83b13dd575e2fc9275a5d39764736f6c63430008190033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063809d7b311161005b578063809d7b311461010e578063879ac8f814610135578063a4edcd4c14610171578063f46f16c21461019857600080fd5b806329db1be61461008257806341976e09146100c657806369818a35146100e7575b600080fd5b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d96100d4366004610466565b6101bf565b6040519081526020016100bd565b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b61015c7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016100bd565b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161461021357604051630f58058360e11b815260040160405180910390fd5b600061021d610386565b6040516341976e0960e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301529192506000917f000000000000000000000000000000000000000000000000000000000000000016906341976e0990602401602060405180830381865afa1580156102a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cd9190610496565b905060007f000000000000000000000000000000000000000000000000000000000000000090506000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610334573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035891906104af565b60ff16905061036881600a6105ce565b61037284866105da565b61037c91906105f1565b9695505050505050565b60405163abca0eab60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301527f000000000000000000000000000000000000000000000000000000000000000063ffffffff1660248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063abca0eab90604401602060405180830381865afa15801561043d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104619190610496565b905090565b60006020828403121561047857600080fd5b81356001600160a01b038116811461048f57600080fd5b9392505050565b6000602082840312156104a857600080fd5b5051919050565b6000602082840312156104c157600080fd5b815160ff8116811461048f57600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610523578160001904821115610509576105096104d2565b8085161561051657918102915b93841c93908002906104ed565b509250929050565b60008261053a575060016105c8565b81610547575060006105c8565b816001811461055d576002811461056757610583565b60019150506105c8565b60ff841115610578576105786104d2565b50506001821b6105c8565b5060208310610133831016604e8410600b84101617156105a6575081810a6105c8565b6105b083836104e8565b80600019048211156105c4576105c46104d2565b0290505b92915050565b600061048f838361052b565b80820281158282048414176105c8576105c86104d2565b60008261060e57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220a111fc04f9cd6d5391f30cd9318e07a2d4548dba83b13dd575e2fc9275a5d39764736f6c63430008190033",
  "devdoc": {
    "author": "Venus",
    "kind": "dev",
    "methods": {
      "constructor": {
        "custom:oz-upgrades-unsafe-allow": "constructor"
      },
      "getPrice(address)": {
        "params": {
          "asset": "Address of the correlated token"
        },
        "returns": {
          "_0": "price The price of the correlated token in scaled decimal places"
        }
      }
    },
    "stateVariables": {
      "MARKET": {
        "custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
      },
      "PT_ORACLE": {
        "custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
      },
      "TWAP_DURATION": {
        "custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
      }
    },
    "title": "PendleOracle",
    "version": 1
  },
  "userdoc": {
    "errors": {
      "InvalidDuration()": [
        {
          "notice": "Thrown if the duration is invalid"
        }
      ],
      "InvalidTokenAddress()": [
        {
          "notice": "Thrown if the token address is invalid"
        }
      ],
      "ZeroAddressNotAllowed()": [
        {
          "notice": "Thrown if the supplied address is a zero address where it is not allowed"
        }
      ],
      "ZeroValueNotAllowed()": [
        {
          "notice": "Thrown if the supplied value is 0 where it is not allowed"
        }
      ]
    },
    "kind": "user",
    "methods": {
      "CORRELATED_TOKEN()": {
        "notice": "Address of the correlated token"
      },
      "MARKET()": {
        "notice": "Address of the market"
      },
      "PT_ORACLE()": {
        "notice": "Address of the PT oracle"
      },
      "RESILIENT_ORACLE()": {
        "notice": "Address of Resilient Oracle"
      },
      "TWAP_DURATION()": {
        "notice": "Twap duration for the oracle"
      },
      "UNDERLYING_TOKEN()": {
        "notice": "Address of the underlying token"
      },
      "constructor": {
        "notice": "Constructor for the implementation contract."
      },
      "getPrice(address)": {
        "notice": "Fetches the price of the correlated token"
      }
    },
    "notice": "This oracle fetches the price of a pendle token",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}
