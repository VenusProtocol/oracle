{
  "address": "0xD19636f00d10B2B66C1B5D217e57c49428f73067",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bool",
          "name": "isEnable",
          "type": "bool"
        }
      ],
      "name": "GlobalEnable",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "vToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "enable",
          "type": "bool"
        }
      ],
      "name": "OracleEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "vToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        }
      ],
      "name": "OracleSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "mainOracle",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "pivotOracle",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "fallbackOracle",
          "type": "address"
        }
      ],
      "name": "TokenConfigAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "INVALID_PRICE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vToken",
          "type": "address"
        },
        {
          "internalType": "enum ResilientOracle.OracleRole",
          "name": "role",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "enable",
          "type": "bool"
        }
      ],
      "name": "enableOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vToken",
          "type": "address"
        },
        {
          "internalType": "enum ResilientOracle.OracleRole",
          "name": "role",
          "type": "uint8"
        }
      ],
      "name": "getOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vToken",
          "type": "address"
        }
      ],
      "name": "getTokenConfig",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "vToken",
              "type": "address"
            },
            {
              "internalType": "address[3]",
              "name": "oracles",
              "type": "address[3]"
            },
            {
              "internalType": "bool[3]",
              "name": "enableFlagsForOracles",
              "type": "bool[3]"
            }
          ],
          "internalType": "struct ResilientOracle.TokenConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vToken",
          "type": "address"
        }
      ],
      "name": "getUnderlyingPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        },
        {
          "internalType": "enum ResilientOracle.OracleRole",
          "name": "role",
          "type": "uint8"
        }
      ],
      "name": "setOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "vToken",
              "type": "address"
            },
            {
              "internalType": "address[3]",
              "name": "oracles",
              "type": "address[3]"
            },
            {
              "internalType": "bool[3]",
              "name": "enableFlagsForOracles",
              "type": "bool[3]"
            }
          ],
          "internalType": "struct ResilientOracle.TokenConfig",
          "name": "tokenConfig",
          "type": "tuple"
        }
      ],
      "name": "setTokenConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "vToken",
              "type": "address"
            },
            {
              "internalType": "address[3]",
              "name": "oracles",
              "type": "address[3]"
            },
            {
              "internalType": "bool[3]",
              "name": "enableFlagsForOracles",
              "type": "bool[3]"
            }
          ],
          "internalType": "struct ResilientOracle.TokenConfig[]",
          "name": "tokenConfigs_",
          "type": "tuple[]"
        }
      ],
      "name": "setTokenConfigs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vToken",
          "type": "address"
        }
      ],
      "name": "updatePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd8055593cf3383996fd33106058de2db9cbac82f771706a8a916e251a3036145",
  "receipt": {
    "to": null,
    "from": "0x2Ce1d0ffD7E869D9DF33e28552b12DdDed326706",
    "contractAddress": "0xD19636f00d10B2B66C1B5D217e57c49428f73067",
    "transactionIndex": 3,
    "gasUsed": "1327783",
    "logsBloom": "0x
    "blockHash": "0xd5701f3e4353b2b3dd28fb8eddd99e5a417ed4e6b6f44805cd79e23938dca914",
    "transactionHash": "0xd8055593cf3383996fd33106058de2db9cbac82f771706a8a916e251a3036145",
    "logs": [],
    "blockNumber": 23668907,
    "cumulativeGasUsed": "1437525",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "a82b7334f3d393c57a5531f727e97e8b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"isEnable\",\"type\":\"bool\"}],\"name\":\"GlobalEnable\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"OracleEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"}],\"name\":\"OracleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mainOracle\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pivotOracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fallbackOracle\",\"type\":\"address\"}],\"name\":\"TokenConfigAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INVALID_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vToken\",\"type\":\"address\"},{\"internalType\":\"enum ResilientOracle.OracleRole\",\"name\":\"role\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"enableOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vToken\",\"type\":\"address\"},{\"internalType\":\"enum ResilientOracle.OracleRole\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"getOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vToken\",\"type\":\"address\"}],\"name\":\"getTokenConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vToken\",\"type\":\"address\"},{\"internalType\":\"address[3]\",\"name\":\"oracles\",\"type\":\"address[3]\"},{\"internalType\":\"bool[3]\",\"name\":\"enableFlagsForOracles\",\"type\":\"bool[3]\"}],\"internalType\":\"struct ResilientOracle.TokenConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vToken\",\"type\":\"address\"}],\"name\":\"getUnderlyingPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"enum ResilientOracle.OracleRole\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"setOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vToken\",\"type\":\"address\"},{\"internalType\":\"address[3]\",\"name\":\"oracles\",\"type\":\"address[3]\"},{\"internalType\":\"bool[3]\",\"name\":\"enableFlagsForOracles\",\"type\":\"bool[3]\"}],\"internalType\":\"struct ResilientOracle.TokenConfig\",\"name\":\"tokenConfig\",\"type\":\"tuple\"}],\"name\":\"setTokenConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vToken\",\"type\":\"address\"},{\"internalType\":\"address[3]\",\"name\":\"oracles\",\"type\":\"address[3]\"},{\"internalType\":\"bool[3]\",\"name\":\"enableFlagsForOracles\",\"type\":\"bool[3]\"}],\"internalType\":\"struct ResilientOracle.TokenConfig[]\",\"name\":\"tokenConfigs_\",\"type\":\"tuple[]\"}],\"name\":\"setTokenConfigs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vToken\",\"type\":\"address\"}],\"name\":\"updatePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"enableOracle(address,uint8,bool)\":{\"params\":{\"enable\":\"expected status\",\"role\":\"oracle role\",\"vToken\":\"vToken address\"}},\"getOracle(address,uint8)\":{\"params\":{\"role\":\"oracle role\",\"vToken\":\"vtoken address\"}},\"getTokenConfig(address)\":{\"details\":\"Get token config by vToken address \",\"params\":{\"vToken\":\"vtoken address\"}},\"getUnderlyingPrice(address)\":{\"params\":{\"vToken\":\"vToken address\"},\"returns\":{\"_0\":\"price USD price in 18 decimals\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setOracle(address,address,uint8)\":{\"params\":{\"oracle\":\"oracle address\",\"role\":\"oracle role\",\"vToken\":\"vToken address\"}},\"setTokenConfig((address,address[3],bool[3]))\":{\"params\":{\"tokenConfig\":\"token config struct\"}},\"setTokenConfigs((address,address[3],bool[3])[])\":{\"params\":{\"tokenConfigs_\":\"token config array\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updatePrice(address)\":{\"params\":{\"vToken\":\"vToken address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"enableOracle(address,uint8,bool)\":{\"notice\":\"Enable/disable oracle for the input vToken, input vToken MUST exist\"},\"getOracle(address,uint8)\":{\"notice\":\"Get oracle & enabling status by vToken address \"},\"getUnderlyingPrice(address)\":{\"notice\":\"Get price of underlying asset of the input vToken, check flow: - check the global pausing status - check price from main oracle - check price against pivot oracle, if any - if fallback flag is enabled and price is invalidated, fallback\"},\"pause()\":{\"notice\":\"Pause protocol\"},\"setOracle(address,address,uint8)\":{\"notice\":\"Set oracle of any type for the input vToken, input vToken MUST exist\"},\"setTokenConfig((address,address[3],bool[3]))\":{\"notice\":\"Set single token configs, vToken MUST HAVE NOT be added before, and main oracle MUST NOT be zero address\"},\"setTokenConfigs((address,address[3],bool[3])[])\":{\"notice\":\"Batch set token configs\"},\"unpause()\":{\"notice\":\"Unpause protocol\"},\"updatePrice(address)\":{\"notice\":\"Currently it calls the updateTwap\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ResilientOracle.sol\":\"ResilientOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"contracts/ResilientOracle.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\\\";\\nimport \\\"./interfaces/OracleInterface.sol\\\";\\n\\n\\ncontract ResilientOracle is OwnableUpgradeable, PausableUpgradeable, ResilientOracleInterface {\\n\\n    uint256 public constant INVALID_PRICE = 0;\\n\\n    /**\\n     * @dev oracle role, we have 3 roles at the moment\\n     * MAIN: The most trustworthy price source\\n     * PIVOT: Not so trustworthy price source, used as a loose sanity checker\\n     * FALLBACK: The backup source when main oracle price is invalidated\\n     */\\n    enum OracleRole {\\n        MAIN,\\n        PIVOT,\\n        FALLBACK\\n    }\\n\\n    struct TokenConfig {\\n        /// @notice vToken address\\n        address vToken;\\n        /// @notice `oracles` stores the oracles in the order of: [main, pivot, fallback], \\n        /// it can be indexed with enum OracleRole value\\n        address[3] oracles;\\n        /// @notice `enableFlagsForOracles` stores the oracle enable statuses\\n        /// for each oracle in the same order as `oracles`\\n        bool[3] enableFlagsForOracles;\\n    }\\n\\n    mapping(address => TokenConfig) private tokenConfigs;\\n\\n    event GlobalEnable(bool indexed isEnable);\\n    event TokenConfigAdded(\\n        address indexed token,\\n        address indexed mainOracle, \\n        address indexed pivotOracle, \\n        address fallbackOracle\\n    );\\n    event OracleSet(address indexed vToken, address indexed oracle, uint indexed role);\\n    event OracleEnabled(address indexed vToken, uint indexed role, bool indexed enable);\\n\\n    modifier notNullAddress(address someone) {\\n        require(someone != address(0), \\\"can't be zero address\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @notice Check whether token config exist by checking whether vToken is zero address\\n     * @dev vToken can't be set to zero, so it's suitable to be used to check\\n     * @param vToken vtoken address\\n     */\\n    modifier checkTokenConfigExistance(address vToken) {\\n        require(tokenConfigs[vToken].vToken != address(0), \\\"token config must exist\\\");\\n        _;\\n    }\\n\\n    function initialize() public initializer {\\n        __Ownable_init();\\n        __Pausable_init();\\n    }\\n    \\n    /**\\n     * @notice Pause protocol\\n     */\\n    function pause() external onlyOwner() {\\n        _pause();\\n    }\\n\\n    /**\\n     * @notice Unpause protocol\\n     */\\n    function unpause() external onlyOwner() {\\n        _unpause();\\n    }\\n\\n    /**\\n     * @dev Get token config by vToken address \\n     * @param vToken vtoken address\\n     */\\n    function getTokenConfig(address vToken) external view returns (TokenConfig memory) {\\n        return tokenConfigs[vToken];\\n    }\\n\\n    /**\\n     * @notice Get oracle & enabling status by vToken address \\n     * @param vToken vtoken address\\n     * @param role oracle role\\n     */\\n    function getOracle(address vToken, OracleRole role) public view returns (address oracle, bool enabled) {\\n        oracle = tokenConfigs[vToken].oracles[uint(role)];\\n        enabled = tokenConfigs[vToken].enableFlagsForOracles[uint(role)];\\n    }\\n\\n    /**\\n     * @notice Batch set token configs\\n     * @param tokenConfigs_ token config array\\n     */\\n    function setTokenConfigs(TokenConfig[] memory tokenConfigs_) external onlyOwner() {\\n        require(tokenConfigs_.length != 0, \\\"length can't be 0\\\");\\n        for (uint256 i = 0; i < tokenConfigs_.length; i++) {\\n            setTokenConfig(tokenConfigs_[i]);\\n        }\\n    }\\n\\n    /**\\n     * @notice Set single token configs, vToken MUST HAVE NOT be added before, and main oracle MUST NOT be zero address\\n     * @param tokenConfig token config struct\\n     */\\n    function setTokenConfig(TokenConfig memory tokenConfig) public \\n        onlyOwner()\\n        notNullAddress(tokenConfig.vToken)\\n        notNullAddress(tokenConfig.oracles[uint(OracleRole.MAIN)])\\n    {\\n        tokenConfigs[tokenConfig.vToken] = tokenConfig;\\n        emit TokenConfigAdded(\\n            tokenConfig.vToken,\\n            tokenConfig.oracles[uint(OracleRole.MAIN)],\\n            tokenConfig.oracles[uint(OracleRole.PIVOT)],\\n            tokenConfig.oracles[uint(OracleRole.FALLBACK)]\\n        );\\n    }\\n\\n    /**\\n     * @notice Set oracle of any type for the input vToken, input vToken MUST exist\\n     * @param vToken vToken address\\n     * @param oracle oracle address\\n     * @param role oracle role\\n     */\\n    function setOracle(address vToken, address oracle, OracleRole role) external\\n        onlyOwner()\\n        notNullAddress(vToken)\\n        checkTokenConfigExistance(vToken)\\n    {\\n        require(!(oracle == address(0) && role == OracleRole.MAIN), \\\"can't set zero address to main oracle\\\");\\n        tokenConfigs[vToken].oracles[uint(role)] = oracle;\\n        emit OracleSet(vToken, oracle, uint(role));\\n    }\\n\\n    /**\\n     * @notice Enable/disable oracle for the input vToken, input vToken MUST exist\\n     * @param vToken vToken address\\n     * @param role oracle role\\n     * @param enable expected status\\n     */\\n    function enableOracle(address vToken, OracleRole role, bool enable) external\\n        onlyOwner()\\n        notNullAddress(vToken)\\n        checkTokenConfigExistance(vToken)\\n    {\\n        tokenConfigs[vToken].enableFlagsForOracles[uint(role)] = enable;\\n        emit OracleEnabled(vToken, uint(role), enable);\\n    }\\n\\n    /**\\n     * @notice Currently it calls the updateTwap\\n     * @param vToken vToken address\\n     */\\n    function updatePrice(address vToken) external override {\\n        (address pivotOracle, bool pivotOracleEnabled) = getOracle(vToken, OracleRole.PIVOT);\\n        if (pivotOracle != address(0) && pivotOracleEnabled) {\\n            //if PIVOT oracle is PythOrcle it will revert so we need to catch the revert\\n            try TwapInterface(pivotOracle).updateTwap(vToken) returns (uint256 _price) {} catch {}\\n        }\\n    }\\n\\n    /**\\n     * @notice Get price of underlying asset of the input vToken, check flow:\\n     * - check the global pausing status\\n     * - check price from main oracle\\n     * - check price against pivot oracle, if any\\n     * - if fallback flag is enabled and price is invalidated, fallback\\n     * @param vToken vToken address\\n     * @return price USD price in 18 decimals\\n     */\\n    function getUnderlyingPrice(address vToken) external view override returns (uint256) {\\n        uint256 price = _getUnderlyingPriceInternal(vToken);\\n        (address fallbackOracle, bool fallbackEnabled) = getOracle(vToken, OracleRole.FALLBACK);\\n        if (price == INVALID_PRICE && fallbackEnabled && fallbackOracle != address(0)) {\\n            try OracleInterface(fallbackOracle).getUnderlyingPrice(vToken) returns (uint256 fallbackPrice) { \\n                require(fallbackPrice != INVALID_PRICE, \\\"fallback oracle price must be positive\\\");\\n                return fallbackPrice;\\n            } catch {\\n                revert(\\\"invalid fallback oracle price\\\");   \\n            }\\n        }\\n        // if price is 0 here, it means main oracle price is 0 or got invalidated by pivot oracle\\n        // and fallback oracle is not active, we revert it\\n        require(price != INVALID_PRICE, \\\"invalid resilient oracle price\\\");\\n        return price;\\n    }\\n\\n    /**\\n     * @notice This function won't revert when price is 0, because the fallback oracle may come to play later\\n     * @param vToken vToken address\\n     * @return price USD price in 18 decimals\\n     */\\n    function _getUnderlyingPriceInternal(address vToken) internal view returns (uint256) {\\n        // Global emergency switch\\n        require(!paused(), \\\"resilient oracle is paused\\\");\\n\\n        (address mainOracle, bool mainOracleEnabled) = getOracle(vToken, OracleRole.MAIN);\\n\\n        uint price = INVALID_PRICE;\\n\\n        if (!mainOracleEnabled) {\\n            return price;\\n        }\\n\\n        try OracleInterface(mainOracle).getUnderlyingPrice(vToken) returns (uint256 _price) {\\n            price = _price;\\n\\n            (address pivotOracle, bool pivotOracleEnabled) = getOracle(vToken, OracleRole.PIVOT);\\n            \\n            // Price oracle is not mandantory\\n            if (pivotOracle == address(0) || !pivotOracleEnabled) {\\n                return price;\\n            }\\n\\n            // Check the price with pivot oracle\\n            bool pass = PivotOracleInterface(pivotOracle).validatePrice(vToken, price);\\n            if (!pass) {\\n                return INVALID_PRICE;\\n            }\\n        } catch {\\n            return price;\\n        }\\n        \\n\\n        return price;\\n    }\\n}\",\"keccak256\":\"0x1c33798f9b852c9f00a0ec34b6f02a7cedc20799a6e626ebad827ca497507c00\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/OracleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\npragma experimental ABIEncoderV2;\\n\\n\\ninterface OracleInterface {\\n    function getUnderlyingPrice(address vToken) external view returns (uint256);\\n}\\n\\ninterface ResilientOracleInterface is OracleInterface {\\n    function updatePrice(address vToken) external;\\n}\\n\\ninterface TwapInterface is OracleInterface {\\n    function updateTwap(address vToken) external returns (uint256);\\n}\\n\\ninterface PivotValidatorInterface {\\n    function validatePrice(address vToken, uint256 price) external view returns (bool);\\n}\\n\\ninterface PivotOracleInterface is OracleInterface, PivotValidatorInterface {\\n}\\n\",\"keccak256\":\"0x1bb5567a3d0cdb8b69f1696007cd3fa80a8846447c92324bbe28afa8bb7fcfe7\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061170d806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638456cb5911610097578063a6b1344a11610066578063a6b1344a146101f1578063cb67e3b114610204578063f2fde38b14610224578063fc57d4df1461023757600080fd5b80638456cb59146101895780638b855da4146101915780638da5cb5b146101c357806396e85ced146101de57600080fd5b80634bf39cba116100d35780634bf39cba146101485780635c975abb14610163578063715018a6146101795780638129fc1c1461018157600080fd5b80632cfa387114610105578063333a21b01461011a5780633f4ba83a1461012d5780634b932b8f14610135575b600080fd5b6101186101133660046113c8565b61024a565b005b610118610128366004611478565b6102e0565b6101186103fc565b6101186101433660046114aa565b61040e565b610150600081565b6040519081526020015b60405180910390f35b60655460ff16604051901515815260200161015a565b61011861054e565b610118610560565b610118610679565b6101a461019f3660046114f1565b610689565b604080516001600160a01b03909316835290151560208301520161015a565b6033546040516001600160a01b03909116815260200161015a565b6101186101ec366004611524565b61072b565b6101186101ff36600461153f565b6107c8565b610217610212366004611524565b610994565b60405161015a9190611582565b610118610232366004611524565b610a69565b610150610245366004611524565b610adf565b610252610c8e565b805160000361029c5760405162461bcd60e51b815260206004820152601160248201527006c656e6774682063616e2774206265203607c1b60448201526064015b60405180910390fd5b60005b81518110156102dc576102ca8282815181106102bd576102bd6115fd565b60200260200101516102e0565b806102d481611613565b91505061029f565b5050565b6102e8610c8e565b80516001600160a01b0381166103105760405162461bcd60e51b81526004016102939061163a565b6020820151516001600160a01b03811661033c5760405162461bcd60e51b81526004016102939061163a565b82516001600160a01b039081166000908152609760209081526040909120855181546001600160a01b031916931692909217825584015184919061038690600183019060036110d5565b50604082015161039c906004830190600361112d565b505050602083810151808201518151865160409384015193516001600160a01b039485168152928416949184169316917fa51ad01e2270c314a7b78f0c60fe66c723f2d06c121d63fcdce776e654878fc1910160405180910390a4505050565b610404610c8e565b61040c610ce8565b565b610416610c8e565b826001600160a01b03811661043d5760405162461bcd60e51b81526004016102939061163a565b6001600160a01b038085166000908152609760205260409020548591166104a05760405162461bcd60e51b81526020600482015260176024820152761d1bdad95b8818dbdb999a59c81b5d5cdd08195e1a5cdd604a1b6044820152606401610293565b6001600160a01b038516600090815260976020526040902083906004018560028111156104cf576104cf611669565b600381106104df576104df6115fd565b602091828204019190066101000a81548160ff02191690831515021790555082151584600281111561051357610513611669565b6040516001600160a01b038816907fcf3cad1ec87208efbde5d82a0557484a78d4182c3ad16926a5463bc1f7234b3d90600090a45050505050565b610556610c8e565b61040c6000610d3a565b600054610100900460ff16158080156105805750600054600160ff909116105b8061059a5750303b15801561059a575060005460ff166001145b6105fd5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610293565b6000805460ff191660011790558015610620576000805461ff0019166101001790555b610628610d8c565b610630610dbb565b8015610676576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b610681610c8e565b61040c610dea565b6001600160a01b038216600090815260976020526040812081906001018360028111156106b8576106b8611669565b600381106106c8576106c86115fd565b01546001600160a01b038581166000908152609760205260409020911692506004018360028111156106fc576106fc611669565b6003811061070c5761070c6115fd565b602091828204019190069054906101000a900460ff1690509250929050565b600080610739836001610689565b90925090506001600160a01b038216158015906107535750805b156107c35760405163725068a560e01b81526001600160a01b03848116600483015283169063725068a5906024016020604051808303816000875af19250505080156107bc575060408051601f3d908101601f191682019092526107b99181019061167f565b60015b156107c357505b505050565b6107d0610c8e565b826001600160a01b0381166107f75760405162461bcd60e51b81526004016102939061163a565b6001600160a01b0380851660009081526097602052604090205485911661085a5760405162461bcd60e51b81526020600482015260176024820152761d1bdad95b8818dbdb999a59c81b5d5cdd08195e1a5cdd604a1b6044820152606401610293565b6001600160a01b0384161580156108825750600083600281111561088057610880611669565b145b156108dd5760405162461bcd60e51b815260206004820152602560248201527f63616e277420736574207a65726f206164647265737320746f206d61696e206f6044820152647261636c6560d81b6064820152608401610293565b6001600160a01b0385166000908152609760205260409020849060010184600281111561090c5761090c611669565b6003811061091c5761091c6115fd565b0180546001600160a01b0319166001600160a01b039290921691909117905582600281111561094d5761094d611669565b846001600160a01b0316866001600160a01b03167fea681d3efb830ef032a9c29a7215b5ceeeb546250d2c463dbf87817aecda1bf160405160405180910390a45050505050565b61099c6111ba565b6001600160a01b038281166000908152609760209081526040918290208251606080820185528254909516815283519485019384905293909291840191600184019060039082845b81546001600160a01b031681526001909101906020018083116109e4575050509183525050604080516060810191829052602090920191906004840190600390826000855b825461010083900a900460ff161515815260206001928301818104948501949093039092029101808411610a295790505050505050815250509050919050565b610a71610c8e565b6001600160a01b038116610ad65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610293565b61067681610d3a565b600080610aeb83610e27565b9050600080610afb856002610689565b91509150600083148015610b0c5750805b8015610b2057506001600160a01b03821615155b15610c385760405163fc57d4df60e01b81526001600160a01b03868116600483015283169063fc57d4df90602401602060405180830381865afa925050508015610b87575060408051601f3d908101601f19168201909252610b849181019061167f565b60015b610bd35760405162461bcd60e51b815260206004820152601d60248201527f696e76616c69642066616c6c6261636b206f7261636c652070726963650000006044820152606401610293565b80610c2f5760405162461bcd60e51b815260206004820152602660248201527f66616c6c6261636b206f7261636c65207072696365206d75737420626520706f60448201526573697469766560d01b6064820152608401610293565b95945050505050565b82610c855760405162461bcd60e51b815260206004820152601e60248201527f696e76616c696420726573696c69656e74206f7261636c6520707269636500006044820152606401610293565b50909392505050565b6033546001600160a01b0316331461040c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610293565b610cf0610fe3565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610db35760405162461bcd60e51b815260040161029390611698565b61040c61102c565b600054610100900460ff16610de25760405162461bcd60e51b815260040161029390611698565b61040c61105c565b610df261108f565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d1d3390565b6000610e3560655460ff1690565b15610e825760405162461bcd60e51b815260206004820152601a60248201527f726573696c69656e74206f7261636c65206973207061757365640000000000006044820152606401610293565b600080610e90846000610689565b91509150600081610ea357949350505050565b60405163fc57d4df60e01b81526001600160a01b03868116600483015284169063fc57d4df90602401602060405180830381865afa925050508015610f05575060408051601f3d908101601f19168201909252610f029181019061167f565b60015b610f1157949350505050565b809150600080610f22886001610689565b90925090506001600160a01b0382161580610f3b575080155b15610f4c5750919695505050505050565b60405163fd45a43360e01b81526001600160a01b038981166004830152602482018690526000919084169063fd45a43390604401602060405180830381865afa158015610f9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc191906116e3565b905080610fd75750600098975050505050505050565b50505050949350505050565b60655460ff1661040c5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610293565b600054610100900460ff166110535760405162461bcd60e51b815260040161029390611698565b61040c33610d3a565b600054610100900460ff166110835760405162461bcd60e51b815260040161029390611698565b6065805460ff19169055565b60655460ff161561040c5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610293565b826003810192821561111d579160200282015b8281111561111d57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906110e8565b506111299291506111ef565b5090565b60018301918390821561111d5791602002820160005b8382111561118057835183826101000a81548160ff0219169083151502179055509260200192600101602081600001049283019260010302611143565b80156111ad5782816101000a81549060ff0219169055600101602081600001049283019260010302611180565b50506111299291506111ef565b604051806060016040528060006001600160a01b031681526020016111dd611204565b81526020016111ea611204565b905290565b5b8082111561112957600081556001016111f0565b60405180606001604052806003906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561125b5761125b611222565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561128a5761128a611222565b604052919050565b80356001600160a01b03811681146112a957600080fd5b919050565b801515811461067657600080fd5b600082601f8301126112cd57600080fd5b6112d5611238565b8060608401858111156112e757600080fd5b845b8181101561130a5780356112fc816112ae565b8452602093840193016112e9565b509095945050505050565b600060e0828403121561132757600080fd5b6040516060810181811067ffffffffffffffff8211171561134a5761134a611222565b60405290508061135983611292565b8152602084603f85011261136c57600080fd5b611374611238565b80608086018781111561138657600080fd5b8387015b818110156113a85761139b81611292565b845292840192840161138a565b5081848601526113b888826112bc565b6040860152505050505092915050565b600060208083850312156113db57600080fd5b823567ffffffffffffffff808211156113f357600080fd5b818501915085601f83011261140757600080fd5b81358181111561141957611419611222565b611427848260051b01611261565b818152848101925060e091820284018501918883111561144657600080fd5b938501935b8285101561146c5761145d8986611315565b8452938401939285019261144b565b50979650505050505050565b600060e0828403121561148a57600080fd5b6114948383611315565b9392505050565b8035600381106112a957600080fd5b6000806000606084860312156114bf57600080fd5b6114c884611292565b92506114d66020850161149b565b915060408401356114e6816112ae565b809150509250925092565b6000806040838503121561150457600080fd5b61150d83611292565b915061151b6020840161149b565b90509250929050565b60006020828403121561153657600080fd5b61149482611292565b60008060006060848603121561155457600080fd5b61155d84611292565b925061156b60208501611292565b91506115796040850161149b565b90509250925092565b81516001600160a01b03908116825260208084015160e0840192919081850160005b60038110156115c35782518516825291830191908301906001016115a4565b505050604085015191506080840160005b60038110156115f35783511515825292820192908201906001016115d4565b5050505092915050565b634e487b7160e01b600052603260045260246000fd5b60006001820161163357634e487b7160e01b600052601160045260246000fd5b5060010190565b60208082526015908201527463616e2774206265207a65726f206164647265737360581b604082015260600190565b634e487b7160e01b600052602160045260246000fd5b60006020828403121561169157600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000602082840312156116f557600080fd5b8151611494816112ae56fea164736f6c634300080d000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80638456cb5911610097578063a6b1344a11610066578063a6b1344a146101f1578063cb67e3b114610204578063f2fde38b14610224578063fc57d4df1461023757600080fd5b80638456cb59146101895780638b855da4146101915780638da5cb5b146101c357806396e85ced146101de57600080fd5b80634bf39cba116100d35780634bf39cba146101485780635c975abb14610163578063715018a6146101795780638129fc1c1461018157600080fd5b80632cfa387114610105578063333a21b01461011a5780633f4ba83a1461012d5780634b932b8f14610135575b600080fd5b6101186101133660046113c8565b61024a565b005b610118610128366004611478565b6102e0565b6101186103fc565b6101186101433660046114aa565b61040e565b610150600081565b6040519081526020015b60405180910390f35b60655460ff16604051901515815260200161015a565b61011861054e565b610118610560565b610118610679565b6101a461019f3660046114f1565b610689565b604080516001600160a01b03909316835290151560208301520161015a565b6033546040516001600160a01b03909116815260200161015a565b6101186101ec366004611524565b61072b565b6101186101ff36600461153f565b6107c8565b610217610212366004611524565b610994565b60405161015a9190611582565b610118610232366004611524565b610a69565b610150610245366004611524565b610adf565b610252610c8e565b805160000361029c5760405162461bcd60e51b815260206004820152601160248201527006c656e6774682063616e2774206265203607c1b60448201526064015b60405180910390fd5b60005b81518110156102dc576102ca8282815181106102bd576102bd6115fd565b60200260200101516102e0565b806102d481611613565b91505061029f565b5050565b6102e8610c8e565b80516001600160a01b0381166103105760405162461bcd60e51b81526004016102939061163a565b6020820151516001600160a01b03811661033c5760405162461bcd60e51b81526004016102939061163a565b82516001600160a01b039081166000908152609760209081526040909120855181546001600160a01b031916931692909217825584015184919061038690600183019060036110d5565b50604082015161039c906004830190600361112d565b505050602083810151808201518151865160409384015193516001600160a01b039485168152928416949184169316917fa51ad01e2270c314a7b78f0c60fe66c723f2d06c121d63fcdce776e654878fc1910160405180910390a4505050565b610404610c8e565b61040c610ce8565b565b610416610c8e565b826001600160a01b03811661043d5760405162461bcd60e51b81526004016102939061163a565b6001600160a01b038085166000908152609760205260409020548591166104a05760405162461bcd60e51b81526020600482015260176024820152761d1bdad95b8818dbdb999a59c81b5d5cdd08195e1a5cdd604a1b6044820152606401610293565b6001600160a01b038516600090815260976020526040902083906004018560028111156104cf576104cf611669565b600381106104df576104df6115fd565b602091828204019190066101000a81548160ff02191690831515021790555082151584600281111561051357610513611669565b6040516001600160a01b038816907fcf3cad1ec87208efbde5d82a0557484a78d4182c3ad16926a5463bc1f7234b3d90600090a45050505050565b610556610c8e565b61040c6000610d3a565b600054610100900460ff16158080156105805750600054600160ff909116105b8061059a5750303b15801561059a575060005460ff166001145b6105fd5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610293565b6000805460ff191660011790558015610620576000805461ff0019166101001790555b610628610d8c565b610630610dbb565b8015610676576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b610681610c8e565b61040c610dea565b6001600160a01b038216600090815260976020526040812081906001018360028111156106b8576106b8611669565b600381106106c8576106c86115fd565b01546001600160a01b038581166000908152609760205260409020911692506004018360028111156106fc576106fc611669565b6003811061070c5761070c6115fd565b602091828204019190069054906101000a900460ff1690509250929050565b600080610739836001610689565b90925090506001600160a01b038216158015906107535750805b156107c35760405163725068a560e01b81526001600160a01b03848116600483015283169063725068a5906024016020604051808303816000875af19250505080156107bc575060408051601f3d908101601f191682019092526107b99181019061167f565b60015b156107c357505b505050565b6107d0610c8e565b826001600160a01b0381166107f75760405162461bcd60e51b81526004016102939061163a565b6001600160a01b0380851660009081526097602052604090205485911661085a5760405162461bcd60e51b81526020600482015260176024820152761d1bdad95b8818dbdb999a59c81b5d5cdd08195e1a5cdd604a1b6044820152606401610293565b6001600160a01b0384161580156108825750600083600281111561088057610880611669565b145b156108dd5760405162461bcd60e51b815260206004820152602560248201527f63616e277420736574207a65726f206164647265737320746f206d61696e206f6044820152647261636c6560d81b6064820152608401610293565b6001600160a01b0385166000908152609760205260409020849060010184600281111561090c5761090c611669565b6003811061091c5761091c6115fd565b0180546001600160a01b0319166001600160a01b039290921691909117905582600281111561094d5761094d611669565b846001600160a01b0316866001600160a01b03167fea681d3efb830ef032a9c29a7215b5ceeeb546250d2c463dbf87817aecda1bf160405160405180910390a45050505050565b61099c6111ba565b6001600160a01b038281166000908152609760209081526040918290208251606080820185528254909516815283519485019384905293909291840191600184019060039082845b81546001600160a01b031681526001909101906020018083116109e4575050509183525050604080516060810191829052602090920191906004840190600390826000855b825461010083900a900460ff161515815260206001928301818104948501949093039092029101808411610a295790505050505050815250509050919050565b610a71610c8e565b6001600160a01b038116610ad65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610293565b61067681610d3a565b600080610aeb83610e27565b9050600080610afb856002610689565b91509150600083148015610b0c5750805b8015610b2057506001600160a01b03821615155b15610c385760405163fc57d4df60e01b81526001600160a01b03868116600483015283169063fc57d4df90602401602060405180830381865afa925050508015610b87575060408051601f3d908101601f19168201909252610b849181019061167f565b60015b610bd35760405162461bcd60e51b815260206004820152601d60248201527f696e76616c69642066616c6c6261636b206f7261636c652070726963650000006044820152606401610293565b80610c2f5760405162461bcd60e51b815260206004820152602660248201527f66616c6c6261636b206f7261636c65207072696365206d75737420626520706f60448201526573697469766560d01b6064820152608401610293565b95945050505050565b82610c855760405162461bcd60e51b815260206004820152601e60248201527f696e76616c696420726573696c69656e74206f7261636c6520707269636500006044820152606401610293565b50909392505050565b6033546001600160a01b0316331461040c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610293565b610cf0610fe3565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610db35760405162461bcd60e51b815260040161029390611698565b61040c61102c565b600054610100900460ff16610de25760405162461bcd60e51b815260040161029390611698565b61040c61105c565b610df261108f565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d1d3390565b6000610e3560655460ff1690565b15610e825760405162461bcd60e51b815260206004820152601a60248201527f726573696c69656e74206f7261636c65206973207061757365640000000000006044820152606401610293565b600080610e90846000610689565b91509150600081610ea357949350505050565b60405163fc57d4df60e01b81526001600160a01b03868116600483015284169063fc57d4df90602401602060405180830381865afa925050508015610f05575060408051601f3d908101601f19168201909252610f029181019061167f565b60015b610f1157949350505050565b809150600080610f22886001610689565b90925090506001600160a01b0382161580610f3b575080155b15610f4c5750919695505050505050565b60405163fd45a43360e01b81526001600160a01b038981166004830152602482018690526000919084169063fd45a43390604401602060405180830381865afa158015610f9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc191906116e3565b905080610fd75750600098975050505050505050565b50505050949350505050565b60655460ff1661040c5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610293565b600054610100900460ff166110535760405162461bcd60e51b815260040161029390611698565b61040c33610d3a565b600054610100900460ff166110835760405162461bcd60e51b815260040161029390611698565b6065805460ff19169055565b60655460ff161561040c5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610293565b826003810192821561111d579160200282015b8281111561111d57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906110e8565b506111299291506111ef565b5090565b60018301918390821561111d5791602002820160005b8382111561118057835183826101000a81548160ff0219169083151502179055509260200192600101602081600001049283019260010302611143565b80156111ad5782816101000a81549060ff0219169055600101602081600001049283019260010302611180565b50506111299291506111ef565b604051806060016040528060006001600160a01b031681526020016111dd611204565b81526020016111ea611204565b905290565b5b8082111561112957600081556001016111f0565b60405180606001604052806003906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561125b5761125b611222565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561128a5761128a611222565b604052919050565b80356001600160a01b03811681146112a957600080fd5b919050565b801515811461067657600080fd5b600082601f8301126112cd57600080fd5b6112d5611238565b8060608401858111156112e757600080fd5b845b8181101561130a5780356112fc816112ae565b8452602093840193016112e9565b509095945050505050565b600060e0828403121561132757600080fd5b6040516060810181811067ffffffffffffffff8211171561134a5761134a611222565b60405290508061135983611292565b8152602084603f85011261136c57600080fd5b611374611238565b80608086018781111561138657600080fd5b8387015b818110156113a85761139b81611292565b845292840192840161138a565b5081848601526113b888826112bc565b6040860152505050505092915050565b600060208083850312156113db57600080fd5b823567ffffffffffffffff808211156113f357600080fd5b818501915085601f83011261140757600080fd5b81358181111561141957611419611222565b611427848260051b01611261565b818152848101925060e091820284018501918883111561144657600080fd5b938501935b8285101561146c5761145d8986611315565b8452938401939285019261144b565b50979650505050505050565b600060e0828403121561148a57600080fd5b6114948383611315565b9392505050565b8035600381106112a957600080fd5b6000806000606084860312156114bf57600080fd5b6114c884611292565b92506114d66020850161149b565b915060408401356114e6816112ae565b809150509250925092565b6000806040838503121561150457600080fd5b61150d83611292565b915061151b6020840161149b565b90509250929050565b60006020828403121561153657600080fd5b61149482611292565b60008060006060848603121561155457600080fd5b61155d84611292565b925061156b60208501611292565b91506115796040850161149b565b90509250925092565b81516001600160a01b03908116825260208084015160e0840192919081850160005b60038110156115c35782518516825291830191908301906001016115a4565b505050604085015191506080840160005b60038110156115f35783511515825292820192908201906001016115d4565b5050505092915050565b634e487b7160e01b600052603260045260246000fd5b60006001820161163357634e487b7160e01b600052601160045260246000fd5b5060010190565b60208082526015908201527463616e2774206265207a65726f206164647265737360581b604082015260600190565b634e487b7160e01b600052602160045260246000fd5b60006020828403121561169157600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000602082840312156116f557600080fd5b8151611494816112ae56fea164736f6c634300080d000a",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "enableOracle(address,uint8,bool)": {
        "params": {
          "enable": "expected status",
          "role": "oracle role",
          "vToken": "vToken address"
        }
      },
      "getOracle(address,uint8)": {
        "params": {
          "role": "oracle role",
          "vToken": "vtoken address"
        }
      },
      "getTokenConfig(address)": {
        "details": "Get token config by vToken address ",
        "params": {
          "vToken": "vtoken address"
        }
      },
      "getUnderlyingPrice(address)": {
        "params": {
          "vToken": "vToken address"
        },
        "returns": {
          "_0": "price USD price in 18 decimals"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setOracle(address,address,uint8)": {
        "params": {
          "oracle": "oracle address",
          "role": "oracle role",
          "vToken": "vToken address"
        }
      },
      "setTokenConfig((address,address[3],bool[3]))": {
        "params": {
          "tokenConfig": "token config struct"
        }
      },
      "setTokenConfigs((address,address[3],bool[3])[])": {
        "params": {
          "tokenConfigs_": "token config array"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updatePrice(address)": {
        "params": {
          "vToken": "vToken address"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "enableOracle(address,uint8,bool)": {
        "notice": "Enable/disable oracle for the input vToken, input vToken MUST exist"
      },
      "getOracle(address,uint8)": {
        "notice": "Get oracle & enabling status by vToken address "
      },
      "getUnderlyingPrice(address)": {
        "notice": "Get price of underlying asset of the input vToken, check flow: - check the global pausing status - check price from main oracle - check price against pivot oracle, if any - if fallback flag is enabled and price is invalidated, fallback"
      },
      "pause()": {
        "notice": "Pause protocol"
      },
      "setOracle(address,address,uint8)": {
        "notice": "Set oracle of any type for the input vToken, input vToken MUST exist"
      },
      "setTokenConfig((address,address[3],bool[3]))": {
        "notice": "Set single token configs, vToken MUST HAVE NOT be added before, and main oracle MUST NOT be zero address"
      },
      "setTokenConfigs((address,address[3],bool[3])[])": {
        "notice": "Batch set token configs"
      },
      "unpause()": {
        "notice": "Unpause protocol"
      },
      "updatePrice(address)": {
        "notice": "Currently it calls the updateTwap"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 138,
        "contract": "contracts/ResilientOracle.sol:ResilientOracle",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 141,
        "contract": "contracts/ResilientOracle.sol:ResilientOracle",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 693,
        "contract": "contracts/ResilientOracle.sol:ResilientOracle",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/ResilientOracle.sol:ResilientOracle",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 130,
        "contract": "contracts/ResilientOracle.sol:ResilientOracle",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 303,
        "contract": "contracts/ResilientOracle.sol:ResilientOracle",
        "label": "_paused",
        "offset": 0,
        "slot": "101",
        "type": "t_bool"
      },
      {
        "astId": 408,
        "contract": "contracts/ResilientOracle.sol:ResilientOracle",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3711,
        "contract": "contracts/ResilientOracle.sol:ResilientOracle",
        "label": "tokenConfigs",
        "offset": 0,
        "slot": "151",
        "type": "t_mapping(t_address,t_struct(TokenConfig)3706_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)3_storage": {
        "base": "t_address",
        "encoding": "inplace",
        "label": "address[3]",
        "numberOfBytes": "96"
      },
      "t_array(t_bool)3_storage": {
        "base": "t_bool",
        "encoding": "inplace",
        "label": "bool[3]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(TokenConfig)3706_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct ResilientOracle.TokenConfig)",
        "numberOfBytes": "32",
        "value": "t_struct(TokenConfig)3706_storage"
      },
      "t_struct(TokenConfig)3706_storage": {
        "encoding": "inplace",
        "label": "struct ResilientOracle.TokenConfig",
        "members": [
          {
            "astId": 3695,
            "contract": "contracts/ResilientOracle.sol:ResilientOracle",
            "label": "vToken",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 3700,
            "contract": "contracts/ResilientOracle.sol:ResilientOracle",
            "label": "oracles",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)3_storage"
          },
          {
            "astId": 3705,
            "contract": "contracts/ResilientOracle.sol:ResilientOracle",
            "label": "enableFlagsForOracles",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_bool)3_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}